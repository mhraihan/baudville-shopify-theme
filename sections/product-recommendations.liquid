<div class="container max-w-screen-xl ">
  <product-recommendations class="product-recommendations" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4">
    {% if recommendations.performed and recommendations.products_count > 0 %}
      <h2 class="text-center uppercase product-recommendations__heading heading">{{ section.settings.title | escape }}</h2>
      <ul class="grid collection-products related-collection-products sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-x-6 gap-y-6" role="list">
        {% for recommendation in recommendations.products %}
          {% render 'product-card',
            product_card: recommendation,
           index: forloop.index,
           review: false
          %}

        {% endfor %}
      </ul>
    {% endif %}
  </product-recommendations>
</div>

{% javascript %}
  window.addEventListener("DOMContentLoaded", () => {
    class ProductRecommendations extends HTMLElement {
      constructor() {
        super();
        const handleIntersection = (entries, observer) => {
          if (!entries[0].isIntersecting) 
            return;
          

          observer.unobserve(this);
          fetch(this.dataset.url).then(response => response.text()).then(text => {
            const html = document.createElement('div');
            html.innerHTML = text;
            const recommendations = html.querySelector('product-recommendations');
            if (recommendations && recommendations.innerHTML.trim().length) {
              this.innerHTML = recommendations.innerHTML;
            }

// window.theme.modalVideo.init(0);
          }).catch(e => {
            console.error(e);
          });
        }

        new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 200px 0px'}).observe(this);
      }
    }

    customElements.define('product-recommendations', ProductRecommendations);
  });
{% endjavascript %}

{% schema %}
  {
    "name": "Related Product",
    "tag": "section",
    "class": "spaced-section",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Title",
        "default": "Recommendations for You"
      }
    ]
  }
{% endschema %}